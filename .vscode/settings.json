{
  "css.lint.unknownAtRules": "ignore",
  "scss.lint.unknownAtRules": "ignore", 
  "less.lint.unknownAtRules": "ignore",
  "css.validate": false,
  "scss.validate": false,
  
  // Tailwind CSS IntelliSense Configuration
  "tailwindCSS.experimental.classRegex": [
    // Match cva() from class-variance-authority
    ["cva\\(([^)]*)\\)", "[\"'`]([^\"'`]*).*?[\"'`]"],
    // Match cx() utility
    ["cx\\(([^)]*)\\)", "(?:'|\"|`)([^']*)(?:'|\"|`)"],
    // Match cn() utility from shadcn/ui
    ["cn\\(([^)]*)\\)", "[\"'`]([^\"'`]*).*?[\"'`]"],
    // Match className props
    ["className\\s*[=:]\\s*[\"'`]([^\"'`]*)[\"'`]"],
    // Match class props
    ["class\\s*[=:]\\s*[\"'`]([^\"'`]*)[\"'`]"]
  ],
  "tailwindCSS.includeLanguages": {
    "typescript": "javascript",
    "typescriptreact": "javascript"
  },
  "tailwindCSS.validate": true,
  "tailwindCSS.lint.cssConflict": "warning",
  "tailwindCSS.lint.invalidApply": "error",
  "tailwindCSS.lint.invalidScreen": "error",
  "tailwindCSS.lint.invalidVariant": "error",
  "tailwindCSS.lint.invalidConfigPath": "error",
  "tailwindCSS.lint.invalidTailwindDirective": "error",
  "tailwindCSS.lint.recommendedVariantOrder": "warning",
  
  // File associations
  "files.associations": {
    "*.css": "tailwindcss"
  },
  
  // Editor settings for better autocomplete
  "editor.quickSuggestions": {
    "strings": true
  },
  
  // TypeScript settings
  "typescript.tsdk": "node_modules/typescript/lib",
  "typescript.enablePromptUseWorkspaceTsdk": true,
  
  // ESLint settings
  "eslint.validate": [
    "javascript",
    "javascriptreact",
    "typescript",
    "typescriptreact"
  ],
  
  // Editor settings
  "editor.formatOnSave": true,
  "editor.codeActionsOnSave": {
    "source.fixAll.eslint": "explicit"
  },
  
  // Debugging
  "debug.javascript.autoAttachFilter": "onlyWithFlag",
  "debug.javascript.terminalOptions": {
    "skipFiles": [
      "<node_internals>/**",
      "${workspaceFolder}/node_modules/**"
    ]
  },
  
  // Testing
  "vitest.enable": true,
  "vitest.commandLine": "npm run test:watch",
  
  // Search
  "search.exclude": {
    "**/node_modules": true,
    "**/dist": true,
    "**/.git": true,
    "**/coverage": true,
    "**/build": true
  },
  
  // CodeRabbit settings
  "coderabbit.agentType": "Codex CLI",
  "coderabbit.autoReviewMode": "auto"
}